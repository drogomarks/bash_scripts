server {
   listen 80;
   server_name broncobrothersbrewing.com www.broncobrothersbrewing.com broncobrothers.beer www.broncobrothers.beer;

   #Charset koi*-r;
   access_log /var/log/nginx/broncobrothersbrewing.com-access.log main;
   root /var/www/vhosts/broncobrothersbrewing.com;


    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 512;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;



   #our list of things we 403 here in nginx without back-ending them
   include /etc/nginx/conf.d/global.deny;

   #static contenet we server up directly from Nginx - if we have it - especially media files (low overhead/RAM use / never ask Apache/Varnish)
   location ~* ^.+.(jpg|jpeg|txt|gif|png|js|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|mp3|mp4|ogg)$ {
      try_files $uri $uri/ @proxy;
   }

   # proxy all files we didn't actually find to Varnish listening on 127.0.0.1:8080
   # Varnish is caching PHP content, which I believe it does better/faster than Nginx can
   location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://127.0.0.1:8081;
   }

   # this is separate and should match the above exactly, because I am not smart enough to figure out how to make / jump directly to @proxy
   location @proxy {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://127.0.0.1:8081;
   }

}
[root@ip-172-31-32-157 ~]# vim default_template.conf
[root@ip-172-31-32-157 ~]# sed -i 's/broncobrothersbrewing/example/g' default_template.conf 
[root@ip-172-31-32-157 ~]# vim default_template.conf 
[root@ip-172-31-32-157 ~]# cat default_template.conf 
server {
   listen 80;
   server_name example.com www.example.com;

   #Charset koi*-r;
   access_log /var/log/nginx/example.com-access.log main;
   root /var/www/vhosts/example.com;


    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 512;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;



   #our list of things we 403 here in nginx without back-ending them
   include /etc/nginx/conf.d/global.deny;

   #static contenet we server up directly from Nginx - if we have it - especially media files (low overhead/RAM use / never ask Apache/Varnish)
   location ~* ^.+.(jpg|jpeg|txt|gif|png|js|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|mp3|mp4|ogg)$ {
      try_files $uri $uri/ @proxy;
   }

   # proxy all files we didn't actually find to Varnish listening on 127.0.0.1:8080
   # Varnish is caching PHP content
   location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://127.0.0.1:8081;
   }

   # this is separate and should match the above exactly, because I am not smart enough to figure out how to make / jump directly to @proxy
   location @proxy {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://127.0.0.1:8081;
   }

}
